[{"/home/justin/Desktop/Fullstack/E-commerce/client/src/index.js":"1","/home/justin/Desktop/Fullstack/E-commerce/client/src/reportWebVitals.js":"2","/home/justin/Desktop/Fullstack/E-commerce/client/src/App.js":"3","/home/justin/Desktop/Fullstack/E-commerce/client/src/screens/HomeScreen.js":"4","/home/justin/Desktop/Fullstack/E-commerce/client/src/screens/ProductScreen.js":"5"},{"size":535,"mtime":1682713427509,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1682713427509,"results":"8","hashOfConfig":"7"},{"size":578,"mtime":1683356458004,"results":"9","hashOfConfig":"7"},{"size":1797,"mtime":1683356779336,"results":"10","hashOfConfig":"7"},{"size":227,"mtime":1683320640889,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"1fwl4do",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/justin/Desktop/Fullstack/E-commerce/client/src/index.js",[],[],[],"/home/justin/Desktop/Fullstack/E-commerce/client/src/reportWebVitals.js",[],[],"/home/justin/Desktop/Fullstack/E-commerce/client/src/App.js",[],[],"/home/justin/Desktop/Fullstack/E-commerce/client/src/screens/HomeScreen.js",["29"],[],"import { Link } from 'react-router-dom';\nimport { useEffect, useReducer } from 'react';\nimport axios from 'axios';\nimport logger from 'use-reducer-logger';\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'FETCH_REQUEST':\n      return {...state, loading: true };\n    case 'FETCH_SUCCESS':\n      return {...state, loading: false, products: action.payload};\n    case 'FETCH_ERROR':\n      return {...state, loading:false, error: action.payload };\n    default:\n      return state;\n  }\n}\nfunction HomeScreen() {\n  const [{ products }, dispatch] = useReducer(reducer, {\n    loading: true,\n    products: [],\n    error: '',\n  })\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({type: 'FETCH_REQUEST'});\n        try {\n          const result = await axios.get('/api/products');\n          dispatch({ type: 'FETCH_SUCCESS', payload: result.data});\n        } catch (err) {\n          dispatch({ type: 'FETCH_ERROR', payload: err.message});\n        }\n    };\n    fetchData();\n  }, []);\n  return (\n    <div>\n      <h1>Featured Products</h1>\n      <div className=\"products\">\n        {products.map((product) => (\n          <div className=\"product\" key={product.slug}>\n            <Link to={`/product/${product.slug}`}>\n              <img src={product.image} alt={product.name} />\n            </Link>\n            <div className=\"product-info\">\n              <Link to={`/product/${product.slug}`}>\n                <p>{product.name}</p>\n              </Link>\n              <Link to={`/product/${product.slug}`}>\n                <p>\n                  <strong>{product.price}</strong>\n                </p>\n              </Link>\n              <button>Add to cart</button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\nexport default HomeScreen;\n","/home/justin/Desktop/Fullstack/E-commerce/client/src/screens/ProductScreen.js",[],[],{"ruleId":"30","severity":1,"message":"31","line":4,"column":8,"nodeType":"32","messageId":"33","endLine":4,"endColumn":14},"no-unused-vars","'logger' is defined but never used.","Identifier","unusedVar"]